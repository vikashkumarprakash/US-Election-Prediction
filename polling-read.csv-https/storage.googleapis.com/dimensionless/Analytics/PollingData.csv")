polling=read.csv("https://Analytics/PollingData.csv")str(polling)unique(polling$State)polling_table=tbl_df(polling)polling_table#3 year data so all should have 3 those less than 3 do not have value  or no  valuetable(polling$State)table(polling$Year)#combining above together we can get the details on basis of state na yeartable (polling$State,polling$Year)#using subset funtion to remove the state which do not have data for year 2012subset(table(polling$State)==2,(table(polling$State)==2)==FALSE)# or different waytb=table(polling$State)subset(names(tb),tb==2)
simple<-polling[c("Rasmussen","SurveyUSA","DiffCount","PropR")]#sqldef("select "Rasmussen" from polling")summary(simple)md.pattern(simple)imp_mice<-mice(simple,seed=144)summary(imp_mice)imputed<-complete(mice(simple,seed=144),1)imputed <-complete(imp_mice)summary(imputed)
polling$Rasmussen=imputed$Rasmussenpolling$SurveyUSA=imputed$SurveyUSAsummary(polling)
xyplot(imp_mice,SurveyUSA~Rasmussen|.imp, pch=20, cex=1.2)#buit modelTrain=subset(polling,Year==2004|Year==2008)Test= subset(polling,Year==2012)
table(Train$Republican)table (sign(Train$Rasmussen))table(Train$Republican,sign(Train$Rasmussen))#checking for Multi collinearity
cor(Train$Rasmussen,Train$SurveyUSA)cor(polling[-1])Model1=glm(Republican~SurveyUSA+DiffCount+Year+PropR,data= Train,family="binomial")summary(Model1)vif(Model1)#improved model or best modelModel2=glm(Republican~Rasmussen+DiffCount,data= Train,family="binomial")summary(Model2)vif(Model2)
#Make PredictionPreadict=predict(Model2,newdata=Train,Type= "response")
#confusion matrixtable(Train$Republican,Preadict>=0.5)#making prediction on test data for smart baseline modeltable(Test$Republican,sign(Test$Rasmussen))predict_test= predict(Model2,newdata = Test,Type ="response")#confusion matrix on test datatable(Test$Republican,predict_test>=0.5)#seprate the error(we predicted one state wrong from above confusion matrix to find which state)subset(Test,Republican==0 & predict_test>0.5)
#decision treelibrary(ISLR)data("Hitters")str(Hitters)summary(Hitters)getwd()write.csv(x= Hitters,file="Hitters.csv")View (Hitters)hist(Hitters$Salary)#qplot log od salaryhist(log(Hitters$Salary))hitters$Salary=log(Hitters$Salary)summary(Hitters)Hitters=na.omit(Hitters)summary(Hitters)#splitset.seed(3000)
split<- sample.split(Hitters$Salary,SplitRatio = 0.8)Test_DATE=sample.split(Hitters$Salary,SplitRatio = 0.2)TRAIN<-subset(Hitters,split==TRUE)TEST<-subset(Hitters,split==FALSE) 
